#!/usr/bin/env sh

set -e
set -x

die() {
    printf "%s\n" "$1"
    exit 1
}

ensure_bin() {
    which "$1" >/dev/null 2>/dev/null || die "Missing binary $1"
}

insert_html_block_at() {
    html_file="$1"
    search_term="$2"
    output_file="$3"
    html=$(tr -d '\n' <"$html_file")

    tempfile=$(mktemp)
    awk -v html="$html" -v pattern="$search_term" '{ gsub(pattern,html,$0); gsub(pattern,"\\&",$0); print }' <"$output_file" >"$tempfile"
    mv "$tempfile" "$output_file"
}

insert_markdown_block_at() {
    markdown_file="$1"
    search_term="$2"
    output_file="$3"
    html=$(markdown "$markdown_file")

    tempfile=$(mktemp)
    awk -v html="$html" -v pattern="$search_term" '{ gsub(pattern,html,$0); gsub(pattern,"\\&",$0); print }' <"$output_file" >"$tempfile"
    mv "$tempfile" "$output_file"
}

prettify_html_file() {
    output_file="$1"
    html "$output_file"
}

humanify_programming_language() {
    case "$1" in
        "typescript") printf "TypeScript";;
        "java") printf "Java";;
        "shell") printf "POSIX Shell";;
        "python") printf "Python";;
        "javascript") printf "JavaScript";;
        "ruby") printf "Ruby";;
        "html") printf "HTML";;
        "c") printf "C";;
        *) printf "Unknown";;
    esac
}

ensure_bin html
ensure_bin jq
ensure_bin markdown
ensure_bin sass
